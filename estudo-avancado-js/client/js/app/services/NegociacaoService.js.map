{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["ConnectionFactory","HttpService","Negociacao","NegocicacaoDAO","NegociacaoService","_http","Promise","all","getNegociacoesSemana","getNegociacoesSemanaAnterior","getNegociacoesSemanaRetrasada","then","negociacoes","response","reduce","arrayNegociacoes","array","concat","catch","error","get","map","objeto","data","quantidade","valor","Error","negociacao","getConnection","connection","negociacaoDAO","adicionar","listarTodos","apagarTodos","listaAtual","getNegociacoes","filter","some","isEquals","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["\r\nimport {ConnectionFactory} from \"./ConnectionFactory\";\r\nimport {HttpService} from \"./HttpService\";\r\n\r\nimport {Negociacao} from \"../models/Negociacao\";\r\nimport {NegocicacaoDAO} from \"../dao/NegociacaoDAO\";\r\n\r\nexport class NegociacaoService {\r\n\r\n    constructor() {\r\n\r\n        this._http = new HttpService();\r\n    }\r\n\r\n    getNegociacoes() {\r\n\r\n        return Promise.all([\r\n            this.getNegociacoesSemana(),\r\n            this.getNegociacoesSemanaAnterior(),\r\n            this.getNegociacoesSemanaRetrasada()\r\n        ])\r\n            .then(response => {\r\n\r\n                let negociacoes = response.reduce((arrayNegociacoes, array) => arrayNegociacoes.concat(array));\r\n                return negociacoes;\r\n            })\r\n            .catch(error => {\r\n\r\n                throw error;\r\n            });\r\n    }\r\n\r\n    getNegociacoesSemana() {\r\n\r\n        return this._http.get(\"negociacoes/semana\")\r\n            .then(negociacoes => {\r\n\r\n                return negociacoes.map(objeto =>\r\n                    new Negociacao(objeto.data, objeto.quantidade, objeto.valor)\r\n                );\r\n            })\r\n            .catch(error => {\r\n\r\n                throw new Error(\"Não foi possível obter as negociações da semana.\");\r\n            });\r\n    }\r\n\r\n    getNegociacoesSemanaAnterior() {\r\n\r\n        return this._http.get(\"negociacoes/anterior\")\r\n            .then(negociacoes => {\r\n\r\n                return negociacoes.map(objeto =>\r\n                    new Negociacao(objeto.data, objeto.quantidade, objeto.valor)\r\n                );\r\n            })\r\n            .catch(error => {\r\n\r\n                throw new Error(\"Não foi possível obter as negociações da semana anterior.\");\r\n            });\r\n    }\r\n\r\n    getNegociacoesSemanaRetrasada() {\r\n\r\n        return this._http.get(\"negociacoes/retrasada\")\r\n            .then(negociacoes => {\r\n\r\n                return negociacoes.map(objeto =>\r\n                    new Negociacao(objeto.data, objeto.quantidade, objeto.valor)\r\n                );\r\n            })\r\n            .catch(error => {\r\n\r\n                throw new Error(\"Não foi possível obter as negociações da semana retrasada.\");\r\n            });\r\n    }\r\n\r\n    adicionar(negociacao) {\r\n\r\n        return ConnectionFactory.getConnection()\r\n            .then(connection => new NegocicacaoDAO(connection))\r\n            .then(negociacaoDAO => negociacaoDAO.adicionar(negociacao))\r\n            .then(() => \"Negociação adicionada com sucesso! ;)\")\r\n            .catch(error => {\r\n                throw new Error(\"Não foi possível adicionar uma negociação. :(\");\r\n            });\r\n    }\r\n\r\n    listarTodos() {\r\n\r\n        return ConnectionFactory.getConnection()\r\n            .then(connection => new NegocicacaoDAO(connection))\r\n            .then(negociacaoDAO => negociacaoDAO.listarTodos())\r\n            .catch(error => {\r\n                throw new Error(\"Não foi possível listar as negociações. :(\");\r\n            });\r\n    }\r\n\r\n    apagarTodos(negociacao) {\r\n\r\n        return ConnectionFactory.getConnection()\r\n            .then(connection => new NegocicacaoDAO(connection))\r\n            .then(negociacaoDAO => negociacaoDAO.apagarTodos(negociacao))\r\n            .then(() => \"Negociações apagadas com sucesso... :)\")\r\n            .catch(error => {\r\n                throw new Error(\"Não foi possível apagar as negociações. :(\");\r\n            });\r\n    }\r\n\r\n    importar(listaAtual) {\r\n\r\n        return this.getNegociacoes()\r\n            .then(negociacoes =>\r\n\r\n                negociacoes.filter(negociacao =>\r\n                    !listaAtual.some(negociacaoExistente =>\r\n                        negociacao.isEquals(negociacaoExistente)\r\n                    )\r\n                )\r\n            )\r\n            .catch(error => {\r\n\r\n                throw new Error(\"Não foi possível importar as negociações. :o\");\r\n            });\r\n    }\r\n    \r\n}\r\n"]}