{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","url","fetch","then","_handleErrors","response","json","ok","Error","statusText"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mCACaA,W;;;;;;;wCAkCLC,G,EAAK;AAAA;;AAEL,+BAAOC,MAAMD,GAAN,EACFE,IADE,CACG;AAAA,mCAAY,MAAKC,aAAL,CAAmBC,QAAnB,CAAZ;AAAA,yBADH,EAEFF,IAFE,CAEG;AAAA,mCAAYE,SAASC,IAAT,EAAZ;AAAA,yBAFH,CAAP;AAGH;;;kDAEaD,Q,EAAU;;AAEpB,4BAAI,CAACA,SAASE,EAAd,EAAkB;AACd,kCAAM,IAAIC,KAAJ,CAAUH,SAASI,UAAnB,CAAN;AACH;;AAED,+BAAOJ,QAAP;AACH","file":"HttpService.js","sourcesContent":["\r\nexport class HttpService {\r\n\r\n    // get(url) {\r\n    //     return new Promise((resolve, reject) => {\r\n\r\n    //         let xhr = new XMLHttpRequest();\r\n    //         xhr.open(\"GET\", url);\r\n\r\n    //         xhr.onreadystatechange = () => {\r\n\r\n    //             // STATUS\r\n    //             // 0 = requisição ainda não iniciada;\r\n    //             // 1 = conexão com o servidor estabelecida;\r\n    //             // 2 = requisição recebida;\r\n    //             // 3 = processando requisição;\r\n    //             // 4 = requisição concluída e resposta pronta\r\n\r\n    //             if (xhr.readyState == 4) {\r\n    //                 if (xhr.status == 200) {\r\n\r\n    //                     resolve(JSON.parse(xhr.responseText));\r\n    //                 } else {\r\n\r\n    //                     console.log(xhr.responseText);\r\n    //                     reject(xhr.responseText);\r\n    //                 }\r\n    //             }\r\n    //         };\r\n\r\n    //         xhr.send();\r\n    //     });\r\n    // }\r\n\r\n    // Com Fetch API\r\n    get(url) {\r\n\r\n        return fetch(url)\r\n            .then(response => this._handleErrors(response))\r\n            .then(response => response.json());\r\n    }\r\n\r\n    _handleErrors(response) {\r\n\r\n        if (!response.ok) {\r\n            throw new Error(response.statusText);\r\n        }\r\n\r\n        return response;\r\n    }\r\n\r\n}\r\n"]}